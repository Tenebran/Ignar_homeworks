{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","to","Error404","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInputError","e","currentTarget","value","key","superInput","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","xmlns","aria-hidden","role","width","height","preserveAspectRatio","viewBox","fill","d","SuperButton","red","finalClassName","default","HW6","setValue","undefined","onClick","Junior","JuniorPlus","AlternativeMessage","Message","props","src","avatar","alt","name","message","time","messageData","HW1","Affair","affair","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filter","filteredAffairs","prio","filterAffairs","list","deleteAffair","Greeting","setNameCallback","addUser","totalUsers","onKeyPressHandler","GreetingContainer","users","addUserCallback","setName","setError","trim","alert","length","event","HW3","setUsers","console","log","newUsers","v1","addUsers","SuperCheckbox","onChangeChecked","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","b","disable","PreJunior","PATH","Routes","path","exact","render","from","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5aa5e802.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2KR1X\",\"red\":\"SuperButton_red__3pb2v\",\"disable\":\"SuperButton_disable__2ZE_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2rpFl\",\"superInputError\":\"SuperInputText_superInputError__2r69g\",\"error\":\"SuperInputText_error__3A_dF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__1vX2o\",\"testSpanError\":\"HW4_testSpanError__ggTHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1AdJ1\",\"spanClassName\":\"SuperCheckbox_spanClassName__ovqNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1MSZ3\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"header__wrapper\">\r\n        <Link className=\"header__wrapper__link\" to=\"/pre-junior\">\r\n          Pre-junior\r\n        </Link>\r\n        <Link className=\"header__wrapper__link\" to=\"/junior\">\r\n          Junior\r\n        </Link>\r\n        <Link className=\"header__wrapper__link\" to=\"/junior-plus\">\r\n          JuniorPlus\r\n        </Link>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Error404.scss';\r\n\r\nfunction Error404() {\r\n  return (\r\n    <div className=\"error\">\r\n      <div className=\"error__title\">404</div>\r\n      <div className=\"error__title\">Page not found!</div>\r\n      <div className=\"error__title\">—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error404;\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react';\r\nimport s from './SuperInputText.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && // если есть пропс onChange\r\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    onEnter && // если есть пропс onEnter\r\n      e.key === 'Enter' && // и если нажата кнопка Enter\r\n      onEnter(); // то вызвать его\r\n  };\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n  const finalInputClassName = `${s.superInputError} ${className ? className : ''}`; // need to fix with (?:) and s.superInput\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={'text'}\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={error ? finalInputClassName : s.superInput}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuperInputText;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, { DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState } from 'react';\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText';\r\nimport { saveState } from '../../localStorage/localStorage';\r\nimport './SuperEditableSpan.scss';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n\r\n  spanProps?: DefaultSpanPropsType; // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\r\n  autoFocus, // игнорировать изменение этого пропса\r\n  onBlur,\r\n  onEnter,\r\n  spanProps,\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const { children, onDoubleClick, className, ...restSpanProps } = spanProps || {};\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false);\r\n    saveState('inputValue', restProps.value);\r\n    onEnter && onEnter();\r\n  };\r\n\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false);\r\n    saveState('inputValue', restProps.value);\r\n    onBlur && onBlur(e);\r\n  };\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true);\r\n    onDoubleClick && onDoubleClick(e);\r\n  };\r\n\r\n  const spanClassName = `${'spanstyle'} ${className}`;\r\n\r\n  return (\r\n    <>\r\n      {editMode ? (\r\n        <SuperInputText\r\n          autoFocus // пропсу с булевым значением не обязательно указывать true\r\n          onBlur={onBlurCallback}\r\n          onEnter={onEnterCallback}\r\n          {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n        />\r\n      ) : (\r\n        <span onDoubleClick={onDoubleClickCallBack} className={spanClassName} {...restSpanProps}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            aria-hidden=\"true\"\r\n            role=\"img\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <g fill=\"currentColor\">\r\n              <path d=\"M13.498.795l.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\" />\r\n            </g>\r\n          </svg>\r\n          {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n          {children || restProps.value}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuperEditableSpan;\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\r\nimport s from './SuperButton.module.css';\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n}) => {\r\n  const finalClassName = `${red ? `${s.red} ${s.default}` : s.default} ${className}`;\r\n\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    />\r\n  );\r\n};\r\n\r\nexport default SuperButton;\r\n","import React, { useState } from 'react';\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport { restoreState, saveState } from './localStorage/localStorage';\r\nimport './HW6.scss';\r\n\r\nfunction HW6() {\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  const save = () => {\r\n    saveState<string>('inputValue', value);\r\n  };\r\n  const restore = () => {\r\n    setValue(restoreState('inputValue', ''));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      homeworks 6{/*should work (должно работать)*/}\r\n      <div className=\"hw6\">\r\n        <div>\r\n          <SuperEditableSpan\r\n            value={value}\r\n            onChangeText={setValue}\r\n            spanProps={{ children: value ? undefined : 'enter text...' }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <SuperButton onClick={save}>save</SuperButton>\r\n          <SuperButton onClick={restore}>restore</SuperButton>\r\n        </div>\r\n        <hr />\r\n        {/*для личного творчества, могу проверить*/}\r\n        {/* <AlternativeSuperEditableSpan /> */}\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW6;\r\n","import React from 'react';\r\nimport HW6 from '../../h6/HW6';\r\n\r\nexport const Junior = () => {\r\n  return (\r\n    <div>\r\n      <HW6 />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function JuniorPlus() {\r\n  return (\r\n    <div>\r\n      <h1>Junior Plus</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction AlternativeMessage() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react';\r\nimport './Message.scss';\r\n\r\ntype MessageType = {\r\n  avatar: string;\r\n  name: string;\r\n  message: string;\r\n  time: string;\r\n};\r\nfunction Message(props: MessageType) {\r\n  return (\r\n    <div className=\"message\">\r\n      <div className=\"message__image-wrapper\">\r\n        <img className=\"message__avatar\" src={props.avatar} alt=\"avatar\" />\r\n      </div>\r\n      <div className=\"message__text-wrapper\">\r\n        <div className=\"message__text__login\">{props.name}</div>\r\n        <div className=\"message__text__message\">{props.message}</div>\r\n        <div className=\"message__text__time\">{props.time}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport AlternativeMessage from './AlternativeMessage';\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n  avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n  name: 'Some Name',\r\n  message: 'some text',\r\n  time: '22:00',\r\n};\r\n\r\nfunction HW1() {\r\n  return (\r\n    <div>\r\n      <hr />\r\n      homeworks 1 should work (должно работать)\r\n      <Message\r\n        avatar={messageData.avatar}\r\n        name={messageData.name}\r\n        message={messageData.message}\r\n        time={messageData.time}\r\n      />\r\n      <Message\r\n        avatar={messageData.avatar}\r\n        name={messageData.name}\r\n        message={messageData.message}\r\n        time={messageData.time}\r\n      />\r\n      <Message\r\n        avatar={messageData.avatar}\r\n        name={messageData.name}\r\n        message={messageData.message}\r\n        time={messageData.time}\r\n      />\r\n      <hr />\r\n      для личного творчества, могу проверить\r\n      <AlternativeMessage />\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW1;\r\n","import React from 'react';\r\nimport { AffairType } from './HW2';\r\n\r\ntype AffairPropsType = {\r\n  affair: AffairType;\r\n  deleteAffairCallback: (id: number) => void;\r\n};\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n  const deleteCallback = () => {\r\n    props.deleteAffairCallback(props.affair._id);\r\n  };\r\n  return (\r\n    <div className=\"list\">\r\n      <div className=\"list__wrapper\"> {props.affair.name}</div>\r\n\r\n      <button className=\"button\" onClick={deleteCallback}>\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Affair;\r\n","import React from 'react';\r\nimport Affair from './Affair';\r\nimport { AffairType, FilterType } from './HW2';\r\n\r\ntype AffairsPropsType = {\r\n  data: Array<AffairType>;\r\n  setFilter: (button: FilterType) => void;\r\n  deleteAffairCallback: (id: number) => void;\r\n};\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n  const mappedAffairs = props.data.map((a: AffairType) => (\r\n    <Affair // should work\r\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n      affair={a}\r\n      deleteAffairCallback={props.deleteAffairCallback}\r\n    />\r\n  ));\r\n\r\n  const setAll = () => {\r\n    props.setFilter('all');\r\n  };\r\n  const setHigh = () => {\r\n    props.setFilter('high');\r\n  };\r\n  const setMiddle = () => {\r\n    props.setFilter('middle');\r\n  };\r\n  const setLow = () => {\r\n    props.setFilter('low');\r\n  };\r\n\r\n  return (\r\n    <div className=\"btn__wrapper\">\r\n      {mappedAffairs}\r\n\r\n      <button className=\"btn\" onClick={setAll}>\r\n        All\r\n      </button>\r\n      <button className=\"btn\" onClick={setHigh}>\r\n        High\r\n      </button>\r\n      <button className=\"btn\" onClick={setMiddle}>\r\n        Middle\r\n      </button>\r\n      <button className=\"btn\" onClick={setLow}>\r\n        Low\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, { useState } from 'react';\r\nimport Affairs from './Affairs';\r\nimport './Affairs.scss';\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle';\r\nexport type AffairType = {\r\n  _id: number;\r\n  name: string;\r\n  priority: string;\r\n};\r\nexport type FilterType = 'all' | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n  { _id: 1, name: 'React', priority: 'high' },\r\n  { _id: 2, name: 'anime', priority: 'low' },\r\n  { _id: 3, name: 'games', priority: 'low' },\r\n  { _id: 4, name: 'work', priority: 'high' },\r\n  { _id: 5, name: 'html & css', priority: 'middle' },\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (\r\n  affairs: Array<AffairType>,\r\n  filter: FilterType\r\n): Array<AffairType> => {\r\n  if (filter === 'all') {\r\n    let newFilter = affairs;\r\n    return newFilter;\r\n  } else if (filter === 'high') {\r\n    let newFilter = affairs.filter(prio => prio.priority === 'high');\r\n    return newFilter;\r\n  } else if (filter === 'low') {\r\n    let newFilter = affairs.filter(prio => prio.priority === 'low');\r\n    return newFilter;\r\n  } else if (filter === 'middle') {\r\n    let newFilter = affairs.filter(prio => prio.priority === 'middle');\r\n    return newFilter;\r\n  } else {\r\n    return affairs;\r\n  }\r\n};\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n  let deleteFilter = affairs.filter(list => list._id !== _id);\r\n  return deleteFilter;\r\n};\r\n\r\nfunction HW2() {\r\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n  const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n  const filteredAffairs = filterAffairs(affairs, filter);\r\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <hr />\r\n      <Affairs\r\n        data={filteredAffairs}\r\n        setFilter={setFilter}\r\n        deleteAffairCallback={deleteAffairCallback}\r\n      />\r\n      <hr />\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeAffairs/>*/}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW2;\r\n","import React, { ChangeEvent, KeyboardEvent } from 'react';\r\n\r\ntype GreetingPropsType = {\r\n  name: string;\r\n  setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  addUser: () => void;\r\n  error: string;\r\n  totalUsers: number;\r\n  onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void;\r\n};\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n  { name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler } // деструктуризация пропсов\r\n) => {\r\n  return (\r\n    <div className=\"greeting\">\r\n      <input\r\n        value={name}\r\n        onChange={setNameCallback}\r\n        className={error ? 'error' : 'greeting__input'}\r\n        onKeyPress={onKeyPressHandler}\r\n      />\r\n      {error ? <div className=\"error__title\">{error}</div> : <></>}\r\n      <div className=\"greeting__wrapper__btn\">\r\n        <button className=\"greeting__button\" onClick={addUser}>\r\n          add\r\n        </button>\r\n      </div>\r\n      <div className=\"greeting__total\">ToTal Users: {totalUsers}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Greeting;\r\n","import React, { useState, ChangeEvent, KeyboardEvent } from 'react';\r\nimport Greeting from './Greeting';\r\nimport { UserType } from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n  users: Array<UserType>;\r\n  addUserCallback: (name: string) => void;\r\n};\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => {\r\n  // деструктуризация пропсов\r\n  let [name, setName] = useState<string>('');\r\n  let [error, setError] = useState<string>('');\r\n\r\n  const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n  const addUser = () => {\r\n    if (name.trim() === '') {\r\n      setName('');\r\n      setError('Please Name');\r\n      return;\r\n    }\r\n    alert(`Hello  ${name}!`);\r\n    setError('');\r\n    addUserCallback(name);\r\n    setName('');\r\n  };\r\n\r\n  const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n    setError('');\r\n    if (event.key === 'Enter') {\r\n      addUser();\r\n    }\r\n  };\r\n\r\n  let totalUsers = users.length;\r\n\r\n  return (\r\n    <Greeting\r\n      name={name}\r\n      setNameCallback={setNameCallback}\r\n      addUser={addUser}\r\n      error={error}\r\n      totalUsers={totalUsers}\r\n      onKeyPressHandler={onKeyPressHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GreetingContainer;\r\n","import React, { useState } from 'react';\r\nimport { v1 } from 'uuid';\r\nimport GreetingContainer from './GreetingContainer';\r\nimport './Greeting.scss';\r\n\r\n// types\r\nexport type UserType = {\r\n  _id: string; // need to fix any\r\n  name: string; // need to fix any\r\n};\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n  const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\r\n\r\n  const addUserCallback = (name: string) => {\r\n    let newUsers = { name: name, _id: v1() };\r\n    let addUsers = [...users, newUsers];\r\n    setUsers(addUsers); // need to fix\r\n  };\r\n  console.log(users);\r\n  return (\r\n    <div>\r\n      <hr />\r\n      homeworks 3{/*should work (должно работать)*/}\r\n      <GreetingContainer users={users} addUserCallback={addUserCallback} />\r\n      <hr />\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeGreeting/>*/}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW3;\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react';\r\nimport s from './SuperCheckbox.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    // сделайте так чтоб работал onChange и onChangeChecked\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  );\r\n};\r\n\r\nexport default SuperCheckbox;\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText';\r\nimport s from './HW4.module.css';\r\nimport SuperButton from './common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox';\r\nimport b from './common/c2-SuperButton/SuperButton.module.css';\r\n\r\nfunction HW4() {\r\n  const [text, setText] = useState<string>('');\r\n  const error = text ? '' : 'error';\r\n\r\n  const showAlert = () => {\r\n    if (error) {\r\n      alert('введите текст...');\r\n    } else {\r\n      alert(text); // если нет ошибки показать текст\r\n    }\r\n  };\r\n\r\n  const [checked, setChecked] = useState<boolean>(false);\r\n  const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      homeworks 4\r\n      <div className={s.column}>\r\n        <SuperInputText\r\n          value={text}\r\n          onChangeText={setText}\r\n          onEnter={showAlert}\r\n          error={error}\r\n          className={s.testSpanError}\r\n        />\r\n\r\n        <SuperInputText />\r\n\r\n        {/*----------------------------------------------------*/}\r\n\r\n        <SuperButton>default</SuperButton>\r\n\r\n        <SuperButton\r\n          red // пропсу с булевым значением не обязательно указывать true\r\n          onClick={showAlert}\r\n        >\r\n          delete {/*// название кнопки попадёт в children*/}\r\n        </SuperButton>\r\n\r\n        <SuperButton className={b.disable}>disabled</SuperButton>\r\n\r\n        {/*----------------------------------------------------*/}\r\n\r\n        <SuperCheckbox checked={checked} onChangeChecked={setChecked}>\r\n          some text {/*// этот текст попадёт в children*/}\r\n        </SuperCheckbox>\r\n\r\n        {/*// onChange тоже должен работать*/}\r\n        <SuperCheckbox checked={checked} onChange={testOnChange} />\r\n      </div>\r\n      <hr />\r\n      {/*для личного творчества, могу проверить*/}\r\n      {/*<AlternativeSuperInputText/>*/}\r\n      {/*<AlternativeSuperButton/>*/}\r\n      {/*<AlternativeSuperCheckbox/>*/}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW4;\r\n","import React from 'react';\r\nimport HW1 from '../../h1/HW1';\r\nimport HW2 from '../../h2/HW2';\r\nimport HW3 from '../../h3/HW3';\r\nimport HW4 from '../../h4/HW4';\r\nimport HW6 from '../../h6/HW6';\r\n\r\nfunction PreJunior() {\r\n  return (\r\n    <div>\r\n      <HW1 />\r\n      <HW2 />\r\n      <HW3 />\r\n      <HW4 />\r\n      <HW6 />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Error404 from './pages/Error404';\r\nimport { Junior } from './pages/Junior';\r\nimport JuniorPlus from './pages/JuniorPlus';\r\nimport PreJunior from './pages/PreJunior';\r\n\r\nexport const PATH = {\r\n  PRE_JUNIOR: '/pre-junior',\r\n  JUNIOR: '/junior',\r\n  JUNIOR_PLUS: '/junior-plus',\r\n  ERRO_404: '/404',\r\n  // add paths\r\n};\r\n\r\nfunction Routes() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR} />} />\r\n        <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\r\n        <Route path={PATH.JUNIOR} render={() => <Junior />} />\r\n        <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus />} />\r\n        <Route path={PATH.ERRO_404} render={() => <Error404 />} />\r\n        <Redirect from={'*'} to={'/404'} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Routes from './Routes';\r\n\r\nfunction HW5() {\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <Header />\r\n        <Routes />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HW5;\r\n","import React from 'react';\r\nimport s from './App.module.css';\r\nimport HW1 from '../../../p2-homeworks/h1/HW1';\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\nimport PreJunior from '../../../p2-homeworks/h5/pages/PreJunior';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={s.App}>\r\n      <div>react homeworks:</div>\r\n      {/* <HW1 />\r\n      <HW2 />\r\n      <HW3 />\r\n      <HW4 /> */}\r\n      <HW5 />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}